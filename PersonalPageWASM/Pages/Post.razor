@page "/blogpost/{PostId}"

@inject BlogService _blogService
@inject NavigationManager _navManager
@inject IJSRuntime _jsRuntime

<div class="container post-container">

    @if (post == null)
    {
        <Loader/>
    }
    else
    {
        <div class="d-flex mt-2">
            <div>@((MarkupString)post.HtmlContent)</div>
        </div>
    }
</div>


@code {
    [Parameter]
    public string? PostId { get; set; }

    BlogPost? post = null;

    private IJSObjectReference? jsModule;


    protected override async void OnInitialized()
    {
        if(_blogService.Posts == null)
        {
            await LoadPosts();
        }

        post = _blogService.Posts?.Where(p => p.Id == PostId)?.FirstOrDefault();
    }

    private async Task LoadPosts()
    {
        try
        {
            await _blogService.GetPostsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        string path = _navManager.BaseUri + "js/modules.js";

        jsModule = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", path); //"./js/modules.js"

        await jsModule.InvokeVoidAsync("replaceCssClass", "language-razor", "language-csharp");
        await jsModule.InvokeVoidAsync("enableCodeHighlight", null);
        await jsModule.InvokeVoidAsync("applyPostStyling");
    }
}
