@page "/blog"

@inject BlogService _blogService
@inject NavigationManager _navManager

<PageTitle>Blog</PageTitle>

<div class="container-sm">

    @if (posts == null)
    {
        <p>Fetching data from GitHub...</p>
    }
    else
    {
        <div class="d-flex justify-content-start flex-wrap">
            @foreach (var post in posts)
            {
                <div class="post-box" @onclick="@(() => _navManager.NavigateTo("/blogpost/" + post.Id))">
                    <div class="d-flex justify-content-center mt-3">
                        <h6>@post.Title</h6>
                    </div>
                    <div class="mt-2 d-flex justify-content-center fst-italic">
                        <p>@post.Hashtags</p>
                    </div>
                    <div class="d-flex justify-content-center">
                        <p>@post.Date</p>
                    </div>
                </div>
            }
        </div>
    }

</div>

@code {
    List<BlogPost>? posts = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        try
        {
            posts = await _blogService.GetPostsAsync("Posts/BlazorSeries");
            posts = posts?.OrderByDescending(o => o.Date).ToList();

            Console.WriteLine($"Posts loaded, count: {posts?.Count}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
