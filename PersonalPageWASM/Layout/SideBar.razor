@inject NavigationManager _navManager
@inject SideBarUpdateService _updateService

<div class="d-flex flex-column flex-shrink-0 p-3 text-white bg-light w250 h-100">
    <a href="#" class="d-flex align-items-center mb-3 text-dark text-decoration-none">
        <i class="bi-house-door-fill-nav-menu"></i>
        <span class="fs-4"></span>
    </a>
    <hr />
    <ul class="nav nav-pills flex-column mb-auto" id="mainMenu">
        <li class="pointer @(activeItem == "Home" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/"))">
            <div class="nav-link @(activeItem == "Home" ? "active" : "text-dark")">
                <i class="bi bi-house"></i>
                &emsp;Home
            </div>
        </li>
        <li class="pointer @(activeItem == "Blog" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/blog"))">
            <div class="nav-link @(activeItem == "Blog" ? "active" : "text-dark")">
                <i class="bi bi-pen"></i>
                &emsp;Blog
            </div>
        </li>
        <li class="pointer @(activeItem == "Tetris" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/tetris"))">
            <div class="nav-link @(activeItem == "Tetris" ? "active" : "text-dark")">
                <i class="bi bi-box"></i>
                &emsp;Tetris
            </div>
        </li>
        <!-- Blazor Parent Item -->
        <li class="pointer @(isBlazorMenuOpen ? "donothover" : "")">
            <div class="nav-link text-dark @(isBlazorMenuOpen ? "donothover" : "")" @onclick="ToggleBlazorMenu">
                <i class="bi bi-code-slash"></i>
                &emsp;Blazor
                <i class="bi @(isBlazorMenuOpen ? "bi-chevron-up" : "bi-chevron-down") float-end"></i>
            </div>
            <ul class="@(isBlazorMenuOpen ? "show" : "") collapse list-unstyled ps-3" id="blazorSubmenu">
                <li class="pointer @(activeItem == "Blazor-Binding" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/blazor/binding"))">
                    <div class="nav-link @(activeItem == "Blazor-Binding" ? "active" : "text-dark")">Binding</div>
                </li>
                <li class="pointer @(activeItem == "Blazor-EventHandling" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/coming-soon"))">
                    <div class="nav-link @(activeItem == "Blazor-EventHandling" ? "active" : "text-dark")">Event Handling</div>
                </li>
                <li class="pointer @(activeItem == "Blazor-Components" ? "nav-item" : "")" @onclick="@(() => NavigateTo("/coming-soon"))">
                    <div class="nav-link @(activeItem == "Blazor-Components" ? "active" : "text-dark")">Components</div>
                </li>
            </ul>
        </li>
    </ul>
</div>


@code {
    string activeItem = "Home";
    bool isBlazorMenuOpen = false;

    protected override void OnInitialized()
    {
        _updateService.UpdateSidebarActiveItem += (sender, path) => NavigateTo(path);
    }

    void NavigateTo(string path)
    {
        switch (path)
        {
            case "/":
                activeItem = "Home";
                break;
            case "/blog":
                activeItem = "Blog";
                break;
            case "/tetris":
                activeItem = "Tetris";
                break;
            case "/blazor/components":
                activeItem = "Blazor-Components";
                break;
            case "/blazor/binding":
                activeItem = "Blazor-Binding";
                break;
            case "/blazor/event-handling":
                activeItem = "Blazor-EventHandling";
                break;
            default:
                activeItem = "Home";
                break;
        }
        _navManager.NavigateTo(path);
        StateHasChanged();
    }

    void ToggleBlazorMenu()
    {
        isBlazorMenuOpen = !isBlazorMenuOpen;
    }

}
